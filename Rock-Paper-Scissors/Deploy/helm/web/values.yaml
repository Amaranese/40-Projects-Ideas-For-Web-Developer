replicaCount: 1
applicationName: rpsls

image:
  repository: rpslsacr.azurecr.io/web
  tag: prod
  pullPolicy: IfNotPresent
  uploaderRepository: rpslsacr.azurecr.io/modeluploader
  uploaderTag: prod

imagePullSecrets:
  - name: web-acr-key

# Local uploader path where models are stored
uploaderModelPathMount: /app/model
# Local web path where models are deployed.
webModelPathMount: /app/wwwroot/model
# If uploader is enabled 
uploaderEnabled: true

inf:
  web:
    scale:
      enabled: false    # If true the web can be horizontally scaled.
      dp:
        # Setup the redis or the Azure Storage account to save Data Protection
        # provider: Use ONLY "redis", "storage" or "internal". Any other value can generate error
        #   redis: Use redis server
        #   storage: Use storage account
        #   internal: Use internal redis server deployed as a container in the cluster
        provider: internal   
        # If provider is
        #   redis: Redis server connection string
        #   storage: Storage Key. In this case must set "name" with the storage name
        #   internal: Ignored
        constr: ""
        # Needed if provider is storage (storage name). Not used on internal/redis
        name: ""
      # If Azure SignalR is used, put its connection string here. Otherwise sticky sessions will be used
      signalr: ""
  




scaleWeb: false

service:
  type: ClusterIP
  port: 80
  uploaderPort: 8080

resources:
  limits:
    cpu: "500m"
  requests:
    cpu: "100m"

nodeSelector:
  "kubernetes.io/os": linux

tolerations: []

affinity: {}

env:
  configmap: true
  values: {}
  uploaderValues:
    - name: ASPNETCORE_URLS
      value: http://*:8080
    - name: UploadPath
      value: model
probes:
  web:
    liveness:
      path: /health
      initialDelaySeconds: 100
      periodSeconds: 30
      port: http
    readiness:
      path: /health
      initialDelaySeconds: 10
      periodSeconds: 5
      port: http
  uploader: {}